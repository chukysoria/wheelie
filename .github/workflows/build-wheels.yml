name: Build wheels

env:
  PY_REPO_URL: "https://gitlab.com/api/v4/projects/chukysoria%2Fcarloslinuxserver/packages/pypi"

on:
  workflow_dispatch:
    inputs:
      PACKAGES:
        description: "List of packages to build"
        default: ""
        required: true
        type: string
  workflow_call:
    inputs:
      PACKAGES:
        description: "List of packages to build"
        default: ""
        required: true
        type: string

jobs:
  build-multi:
    name: Build ${{ matrix.ARCH }} - ${{ matrix.DISTRO }} 
    runs-on: ubuntu-latest
    strategy:
      matrix:
        ARCH: ["ARMHF-WHEELIE-CHROOT"]
        DISTRO: [alpine-3.17, alpine-3.18]

    steps:
      - name: Clone Repository
        uses: actions/checkout@v4

      - name: Prepare variables
        run: |
          echo "DISTRONAME=$(echo ${{ matrix.DISTRO }} | sed 's|-.*||')" >> $GITHUB_ENV
          echo "DISTROVER=$(echo ${{ matrix.DISTRO }} | sed 's|.*-||')" >> $GITHUB_ENV 
          if [ "${{ matrix.ARCH }}" == "X86-64-MULTI" ]; then
              echo "ARCH=amd64" >> $GITHUB_ENV
              echo "PLATFORM=linux/amd64" >> $GITHUB_ENV
          elif [ "${{ matrix.ARCH }}" == "ARM64" ]; then
              echo "ARCH=arm64v8" >> $GITHUB_ENV
              echo "PLATFORM=linux/arm64" >> $GITHUB_ENV
          else
              echo "ARCH=arm32v7" >> $GITHUB_ENV
              echo "PLATFORM=linux/arm/v7" >> $GITHUB_ENV
          fi

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2
        with:
          platforms: arm

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
        with:
          platforms: ${{ env.PLATFORM }}

      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push
        uses: docker/build-push-action@v4
        with:
          push: true
          pull: true
          tags: ghcr.io/chukysoria/wheelie:${{ env.ARCH }}-${{ env.DISTRONAME }}-${{ env.DISTROVER }}
          build-args: |
            DISTRO=${{ env.DISTRONAME }}
            DISTROVER=${{ env.DISTROVER }}
            ARCH=${{ env.ARCH }}
            PACKAGES=${{ inputs.PACKAGES }}
  publish-artifacts:
    name: Publish artifacts
    runs-on: ubuntu-latest
    needs: build-multi
    steps:
      - name: Retrieve artifacts
        run: |
          echo "Retrieving wheels"
          for distro in $(cat distros.txt); do
              if echo "${distro}" | grep ubuntu; then
                  mkdir -p builds/build-ubuntu
              else
                  mkdir -p builds/build-${distro}
              fi
              for arch in arm32v7; do
                  echo "**** Retrieving wheels for ${arch}-${distro} ****"
                  docker pull ghcr.io/chukysoria/wheelie:${arch}-${distro}
                  docker create --name ${arch}-${distro} ghcr.io/chukysoria/wheelie:${arch}-${distro} blah
                  if echo ${distro} | grep alpine; then
                      docker cp ${arch}-${distro}:/build/. builds/build-${distro}/
                  else
                      docker cp ${arch}-${distro}:/build/. builds/build-ubuntu/
                  fi
                  docker rm ${arch}-${distro}
                  docker rmi ghcr.io/chukysoria/wheelie:${arch}-${distro}
              done
          done

      - name: Checkout to temp folder
        uses: actions/checkout@v4
        with:
          path: temp

      - name: Check wheels created
        run: |
          echo "pushing wheels as necessary"
          mkdir dist
            for os in ubuntu $(cat distros.txt | grep alpine); do
              for wheel in $(ls ./builds/build-${os}/); do
              if ! grep -q "${wheel}" "${TEMPDIR}/wheelie/docs/${os}/published.txt" && ! echo "${wheel}" | grep -q "none-any"; then
                  echo "**** ${wheel} for ${os} will be uploaded to Python Package Repo ****"
                  UPLOADED="${UPLOADED}\\n${wheel}" 
                  cp  "./builds/build-${os}/${wheel}" "./dist"
                  echo ${wheel} >> "./temp/docs/${os}/published.txt"
              else
                  echo "**** ${wheel} for ${os} already processed, skippng****"
              fi
              done
          done
          if [ -n "${UPLOADED}" ]; then
              echo -e "**** Uploaded wheels are: **** ${UPLOADED}"
          else
              echo "No wheels were uploaded"
          fi

      - name: Publish packages
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          user: ${{ secrets.PY_REPO_USER }}
          password: ${{ secrets.PY_REPO_PW }}
          repository-url: ${{ env.PY_REPO_URL}}

      - name: Updating git repo as necessary
        run: |
          echo "updating git repo as necessary"
          cd .temp
          git config --global user.name 'Bot'
          git config --global user.email 'bot@users.noreply.github.com'
          git commit -am '[bot] Updating indices'
          git push
