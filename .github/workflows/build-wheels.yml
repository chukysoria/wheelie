name: Build wheels

env:
  PY_REPO_URL: "https://gitlab.com/api/v4/projects/chukysoria%2Fcarloslinuxserver/packages/pypi"

on:
  workflow_dispatch:
    inputs:
      PACKAGES:
        description: "List of packages to build"
        default: ""
        required: true
        type: string
  workflow_call:
    inputs:
      PACKAGES:
        description: "List of packages to build"
        default: ""
        required: true
        type: string

jobs:
  get-variables:
    name: üë∑ Get distros and arch
    runs-on: ubuntu-latest
    steps:
      - name: ‚§µÔ∏è Check out repo
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          sparse-checkout: |
            arch.txt
            distros.txt
          sparse-checkout-cone-mode: false
      
      - name:  ‚ÑπÔ∏è Export distros and arch
        id: variables
        run: |
          echo "ARCHS=$((jq -R -s -c 'split("\n")') < arch.txt )" >> $GITHUB_OUTPUT
          echo "DISTROS=$((jq -R -s -c 'split("\n")') < distros.txt )" >> $GITHUB_OUTPUT
    
    outputs:
      ARCHS: ${{ steps.variables.outputs.ARCHS }}
      DISTROS: ${{ steps.variables.outputs.DISTROS }}

  build-multi:
    name: üë∑ Build ${{ matrix.architecture }} - ${{ matrix.DISTRO }} 
    runs-on: ubuntu-latest
    needs: get-variables
    env:
      DISTRONAME:
      DISTROVER:
    continue-on-error: true
    strategy:
      fail-fast: false
      matrix:
        architecture: ${{ fromJson(needs.get-variables.outputs.ARCHS) }}
        DISTRO: ${{ fromJson(needs.get-variables.outputs.DISTROS) }}

    steps:
      - name: ‚ÑπÔ∏è Compose build flags
        id: flags
        run: |
          echo "DISTRONAME=$(echo ${{ matrix.DISTRO }} | sed 's|-.*||')" >> $GITHUB_ENV
          echo "DISTROVER=$(echo ${{ matrix.DISTRO }} | sed 's|.*-||')" >> $GITHUB_ENV 
          
          if [[ "${{ matrix.architecture }}" = "amd64" || "${{ matrix.architecture }}" = "x86_64" ]]; then
            echo "platform=linux/amd64" >> "$GITHUB_OUTPUT"
          elif [[ "${{ matrix.architecture }}" = "i386" ]]; then
            echo "platform=linux/386" >> "$GITHUB_OUTPUT"
          elif [[ "${{ matrix.architecture }}" = "armhf" ]]; then
            echo "platform=linux/arm/v6" >> "$GITHUB_OUTPUT"
          elif [[ "${{ matrix.architecture }}" = "armv7" ]]; then
            echo "platform=linux/arm/v7" >> "$GITHUB_OUTPUT"
          elif [[ "${{ matrix.architecture }}" = "aarch64" ]]; then
            echo "platform=linux/arm64/v8" >> "$GITHUB_OUTPUT"
          else
            echo "::error ::Could not determine platform for architecture ${{ matrix.architecture }}"
            exit 1
          fi

      - name: üèó Restore build cache
        id: cache
        uses: actions/cache@1bd1e32a3bdc45362d1e726936510720a7c30a57 # v4.2.0
        with:
          path: /tmp/.docker-cache
          key: docker-${{ matrix.DISTRO }}-${{ matrix.architecture }}-${{ github.sha }}
          restore-keys: |
            docker-${{ matrix.DISTRO }}-${{ matrix.architecture }} 
  
      - name: üèó Set up QEMU
        uses: docker/setup-qemu-action@53851d14592bedcffcf25ea515637cff71ef929a # v3.3.0

      - name: üèó Set up Docker Buildx
        uses: docker/setup-buildx-action@6524bf65af31da8d45b59e8c27de4bd072b392f5 # v3.8.0
        with:
          platforms: ${{ steps.flags.outputs.platform }}

      - name: üèó Login to Github Container Repo
        uses: docker/login-action@9780b0c442fbb1117ed29e0efdff1e18412f7567 # v3.3.0
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: üöÄ Build
        uses: docker/build-push-action@ca877d9245402d1537745e0e356eab47c3520991 # v6.13.0
        with:
          platforms: ${{ steps.flags.outputs.platform }}
          load: true
          cache-from: |
            type=local,src=/tmp/.docker-cache
            ghcr.io/chukysoria/wheelie:${{ matrix.architecture }}-${{ env.DISTRONAME }}-${{ env.DISTROVER }}
          cache-to: type=local,mode=max,dest=/tmp/.docker-cache-new 
          tags: ghcr.io/chukysoria/wheelie:${{ matrix.architecture }}-${{ env.DISTRONAME }}-${{ env.DISTROVER }}
          build-args: |
            DISTRO=${{ env.DISTRONAME }}
            DISTROVER=${{ env.DISTROVER }}
            ARCH=${{ matrix.architecture }}
            PACKAGES=${{ inputs.PACKAGES }}

      - name: üöÄ Push
        uses: docker/build-push-action@ca877d9245402d1537745e0e356eab47c3520991 # v6.13.0
        with:
          platforms: ${{ steps.flags.outputs.platform }}
          push: true
          cache-from: |
            type=local,src=/tmp/.docker-cache-new
            ghcr.io/chukysoria/wheelie:${{ matrix.architecture }}-${{ env.DISTRONAME }}-${{ env.DISTROVER }}
          tags: ghcr.io/chukysoria/wheelie:${{ matrix.architecture }}-${{ env.DISTRONAME }}-${{ env.DISTROVER }}
          build-args: |
            DISTRO=${{ env.DISTRONAME }}
            DISTROVER=${{ env.DISTROVER }}
            ARCH=${{ matrix.architecture }}
            PACKAGES=${{ inputs.PACKAGES }}

      - name: üöÄ Retrieve artifacts
        id: retrieve-artifacts
        run: |
          if echo "${{ matrix.DISTRO }}" | grep ubuntu; then
              mkdir -p builds/build-ubuntu
              echo "ARTIFACT-NAME=build-ubuntu" >> $GITHUB_OUTPUT
          else
              mkdir -p builds/build-${{ matrix.DISTRO }}
              echo "ARTIFACT-NAME=build-${{ matrix.DISTRO }}" >> $GITHUB_OUTPUT
          fi
          echo "**** Retrieving wheels for ${{ matrix.architecture }}-${{ matrix.DISTRO }} ****"
          docker create --name ${{ matrix.architecture }}-${{ matrix.DISTRO }} ghcr.io/chukysoria/wheelie:${{ matrix.architecture }}-${{ matrix.DISTRO }} blah
          if echo ${{ matrix.DISTRO }} | grep alpine; then
              docker cp ${{ matrix.architecture }}-${{ matrix.DISTRO }}:/build/. builds/build-${{ matrix.DISTRO }}/
          else
              docker cp ${{ matrix.architecture }}-${{ matrix.DISTRO }}:/build/. builds/build-ubuntu/
          fi
      
      - name: üöÄ Upload Artifact
        uses: actions/upload-artifact@65c4c4a1ddee5b72f698fdd19549f0f0fb45cf08 # v4.6.0
        with:
          name: ${{ steps.retrieve-artifacts.outputs.ARTIFACT-NAME }}-${{ matrix.architecture }}
          path: ${{ github.workspace }}/builds/${{ steps.retrieve-artifacts.outputs.ARTIFACT-NAME }}/*
     
      # This ugly bit is necessary, or our cache will grow forever...
      # Well until we hit GitHub's limit of 5GB :)
      # https://github.com/docker/build-push-action/issues/252
      # https://github.com/moby/buildkit/issues/1896
      - name: üöö Swap build cache
        if: ${{ github.event_name != 'release' }}
        run: |
          rm -rf /tmp/.docker-cache
          mv /tmp/.docker-cache-new /tmp/.docker-cache

  publish-artifacts:
    name: üë∑Publish artifacts
    runs-on: ubuntu-latest
    needs: 
      - build-multi
    steps:
      - name: ‚§µÔ∏è Checkout to temp folder
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          ref: main
          path: temp
      
      - name: ‚§µÔ∏è Download artifacts
        uses: actions/download-artifact@fa0a91b85d4f404e444e00e005971372dc801d16 # v4.1.8
        with:
          path: ./builds
          pattern: build-*

      - name: üöÄ Check wheels created
        id: check-wheels
        run: |
          echo "pushing wheels as necessary"
          mkdir dist
            for os in ubuntu $(cat ./temp/distros.txt | grep alpine); do
              for arch in $(cat ./temp/arch.txt); do
                for wheel in $(ls ./builds/build-${os}-${arch}/); do
                  if ! grep -iq "${wheel}" "./temp/docs/${os}/published.txt" && ! echo "${wheel}" | grep -iq "none-any"; then
                      echo "**** ${wheel} for ${os} will be uploaded to Python Package Repo ****"
                      UPLOADED="${UPLOADED}\\n${wheel}" 
                      cp  "./builds/build-${os}-${arch}/${wheel}" "./dist"
                      echo ${wheel} >> "./temp/docs/${os}/published.txt"
                  else
                      echo "**** ${wheel} for ${os} already processed, skipping****"
                  fi
                done
              done
          done
          if [ -n "${UPLOADED}" ]; then
              echo -e "**** Uploaded wheels are: **** ${UPLOADED}" >> $GITHUB_STEP_SUMMARY
              echo "PUBLISH=true" >> $GITHUB_OUTPUT
          else
              echo "No wheels were uploaded"
          fi

      - name: üöÄ Publish packages
        uses: pypa/gh-action-pypi-publish@67339c736fd9354cd4f8cb0b744f2b82a74b5c70 # v1.12.3
        if: ${{ steps.check-wheels.outputs.PUBLISH }}
        with:
          user: ${{ secrets.PY_REPO_USER }}
          password: ${{ secrets.PY_REPO_PW }}
          repository-url: ${{ env.PY_REPO_URL}}
          verify-metadata: false
          skip-existing: true

      - name: üöÄ Updating git repo as necessary
        if: ${{ steps.check-wheels.outputs.PUBLISH }}
        run: |
          echo "updating git repo as necessary"
          cd ./temp
          git config --global user.name 'Bot'
          git config --global user.email 'bot@users.noreply.github.com'
          git commit -am '[bot] Updating indices'
          git push
